# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    machine: true
    steps:
      - checkout

      - run: printenv
      - run: git submodule init
      - run: git submodule update
      - run: git submodule foreach git pull origin master
      - run: cd laradock && git checkout 8254c3464743d86f42e9d7c83764bf3c385b6ad8
      - run: cat ./laradock/env-example ./etc/env-example > ./laradock/.env
      - run: cp etc/.env.example src/.env
      - run: cp etc/grant-all-to-testing-database.sql laradock/mysql/docker-entrypoint-initdb.d
      - run: ls laradock

      # Docker
      - run:
          name: Archive Build Context (for checksum)
          command: tar --mtime="2000-01-01 00:00Z" -cvf laradock.tar laradock
      - restore_cache:
          keys:
            - laradock-v1-{{ checksum "./laradock.tar" }}
          paths:
            - ~/caches/images.tar
      - run:
          name: Docker Image Rebuild
          command: |
            if [ ! -f ~/caches/images.tar ]; then
                docker-compose up -d nginx mysql workspace 
            fi
          working_directory: ./laradock
      - run:
          name: Save Docker Images
          command: |
            if [ ! -f ~/caches/images.tar ]; then
                mkdir ~/caches
                docker image save \
                    $(docker image ls --format="{{.Repository}}" | grep $(grep COMPOSE_PROJECT_NAME etc/env-example | sed s/.*=//g)_) \
                -o ~/caches/images.tar
            fi
      - save_cache:
          key: laradock-v1-{{ checksum "./laradock" }}
          paths:
            - ~/caches/images.tar

      # Composer
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "./src/composer.lock" }}
      - run:
          name: Install composer packages
          command: |
            docker-compose exec workspace composer install
          working_directory: ./laradock
      - save_cache:
          key: v1-dependencies-{{ checksum "./src/composer.json" }}
          paths:
            - ./src/vendor

      # Composer
      - restore_cache:
          keys:
            - node-v1-{{ checksum "./src/package.json" }}
      - run:
          name: Install composer packages
          command: |
            docker-compose exec workspace npm install
          working_directory: ./laradock
      - save_cache:
          key: node-v1-{{ checksum "./src/package.json" }}
          paths:
            - ./src/node_modules

      - run:
          name: Initialize Laravel Project
          command: docker-compose exec workspace composer run initialize
          working_directory: ./laradock

      # wait for Docker DB container.
      - run:
          name: install dockerize
          command: |
            wget \
                https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.1
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:3306 -timeout 1m

      # run tests
      - run:
          name: PHPUnit
          command: |
            docker-compose exec workspace ./vendor/bin/phpunit
          working_directory: ./laradock
